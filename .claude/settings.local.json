{
  "permissions": {
    "allow": [
      "Bash(grep -n \"paymentLinkBase\\|successUrl\\|cancelUrl\" index.html)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(open:*)",
      "Bash(rg:*)",
      "Bash(mkdir:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(cp:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "Bash(npm run dev:*)",
      "Bash(ls:*)",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "Bash(vercel dev:*)",
      "Bash(rm:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(vercel:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_close",
      "Bash(echo $VITE_API_BASE_URL)",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_snapshot",
      "Bash(cat:*)",
      "Bash(git push:*)",
      "Bash(for file in *.ts)",
      "Bash(do mv \"$file\" \"$file%.ts.cjs\")",
      "Bash(done)",
      "mcp__playwright__browser_install",
      "Bash(npm ls:*)",
      "Bash(node:*)",
      "Bash(mv:*)",
      "Bash(git config:*)",
      "Bash(ssh:*)",
      "WebFetch(domain:vercel.com)",
      "mcp__playwright__browser_type",
      "Bash(kill:*)",
      "Bash(#!/bin/bash\n\necho \"\"🔄 开始完整支付流程测试...\"\"\n\n# 步骤1: 创建支付会话\necho \"\"步骤1: 创建支付会话\"\"\nCREATE_RESPONSE=$(curl -s -X POST http://localhost:3001/api/create-payment \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -d ''{\n    \"\"assessmentId\"\": \"\"ecr_complete_flow_test_''$(date +%s)''\"\",\n    \"\"successUrl\"\": \"\"https://ecr-kappa.vercel.app/payment-success\"\",\n    \"\"cancelUrl\"\": \"\"https://ecr-kappa.vercel.app/payment-cancel\"\"\n  }'')\n\necho \"\"创建支付会话响应: $CREATE_RESPONSE\"\"\n\n# 提取sessionId\nSESSION_ID=$(echo $CREATE_RESPONSE | grep -o ''\"\"stripeSessionId\"\":\"\"[^\"\"]*'' | cut -d''\"\"'' -f4)\necho \"\"提取到的Session ID: $SESSION_ID\"\"\n\nif [ -z \"\"$SESSION_ID\"\" ]; then\n  echo \"\"❌ 创建支付会话失败\"\"\n  exit 1\nfi\n\necho \"\"✅ 支付会话创建成功: $SESSION_ID\"\"\n\n# 步骤2: 模拟用户支付延迟\necho \"\"步骤2: 模拟用户支付过程...\"\"\nsleep 2\n\n# 步骤3: 验证支付\necho \"\"步骤3: 验证支付结果\"\"\nVERIFY_RESPONSE=$(curl -s -X POST http://localhost:3001/api/verify-payment \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -d \"\"{\\\"\"sessionId\\\"\": \\\"\"$SESSION_ID\\\"\"}\"\")\n\necho \"\"支付验证响应: $VERIFY_RESPONSE\"\"\n\n# 检查验证结果\nSUCCESS=$(echo $VERIFY_RESPONSE | grep -o ''\"\"success\"\":true'')\nif [ -n \"\"$SUCCESS\"\" ]; then\n  echo \"\"🎉 完整支付流程测试成功！所有步骤都正常工作。\"\"\nelse\n  echo \"\"❌ 支付验证失败\"\"\n  exit 1\nfi)",
      "Bash(npm cache clean:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run lint)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npm run preview:*)",
      "Bash(npx vue-tsc:*)",
      "Bash(xmllint:*)",
      "Bash(git remote set-url:*)",
      "Bash(git pull:*)"
    ],
    "deny": []
  }
}